@model FronEnd.Models.PedidoViewModel
@inject FronEnd.Helpers.Interfaces.IUsuarioHelper _usuarioHelper

@{
    ViewData["Title"] = "Detalles del Pedido";
    var usuario = _usuarioHelper.GetUsuario(Model.IdUsuario);
}

<h1 id="titulo">@ViewData["Title"]</h1>

<div>
    <h4>Información Completa</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">ID Pedido:</dt>
        <dd class="col-sm-9">@Model.IdPedido</dd>

        <dt class="col-sm-3">Usuario:</dt>
        <dd class="col-sm-9">
            @usuario?.Nombre
            <small class="text-muted d-block">@usuario?.CorreoElectronico</small>
        </dd>

        <dt class="col-sm-3">Fecha Pedido:</dt>
        <dd class="col-sm-9">@Model.FechaPedido.ToString("dd/MM/yyyy HH:mm")</dd>

        <dt class="col-sm-3">Fecha Entrega:</dt>
        <dd class="col-sm-9">
            @if (Model.FechaEntrega.HasValue)
            {
                @Model.FechaEntrega?.ToString("dd/MM/yyyy HH:mm")
            }
            else
            {
                <span class="text-muted">Pendiente</span>
            }
        </dd>

        <dt class="col-sm-3">Tipo Entrega:</dt>
        <dd class="col-sm-9">@Model.TipoEntrega</dd>

        <dt class="col-sm-3">Total:</dt>
        <dd class="col-sm-9">@Model.Total.ToString("C")</dd>

        <dt class="col-sm-3">Estado:</dt>
        <dd class="col-sm-9">
            <span class="badge @GetEstadoBadgeClass(Model.Estado)">
                @Model.Estado
            </span>
        </dd>
    </dl>
</div>
<div class="form-group mt-3">
    @Html.ActionLink("Editar", "Edit", new { id = Model.IdPedido }, new { @class = "btn btn-outline-warning" })
    <a asp-action="Index" class="btn btn-outline-secondary">Volver</a>
</div>

@functions {
    string GetEstadoBadgeClass(string estado)
    {
        return estado switch
        {
            "Completado" => "bg-success",
            "En proceso" => "bg-primary",
            "Cancelado" => "bg-danger",
            _ => "bg-secondary",
        };
    }
}
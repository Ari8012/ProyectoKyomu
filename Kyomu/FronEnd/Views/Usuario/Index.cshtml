@model IEnumerable<FronEnd.Models.UsuarioViewModel>
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
@inject FronEnd.Helpers.Interfaces.IRolHelper _rolHelper

@{
    ViewData["Title"] = "Usuarios";
}

<h1 id="titulo">@ViewData["Title"]</h1>

<div class="d-flex align-items-center mb-3">
    <a class="btn btn-outline-primary me-3" asp-action="Create">Agregar Usuario</a>
    <div class="input-group" style="max-width: 300px;">
        <span class="input-group-text" id="search-addon">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85zm-5.442 1.398a5.5 5.5 0 1 1 0-11 5.5 5.5 0 0 1 0 11z" />
            </svg>
        </span>
        <input type="search" id="search-box" class="form-control" placeholder="Buscar usuarios" aria-describedby="search-addon">
    </div>
</div>

<div class="row" id="cardsContainer">
    @foreach (var item in Model)
    {
        var rol = item.IdRol != 0 ? _rolHelper.GetRol(item.IdRol) : null;

        <div class="col-md-4 card-container">
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        @if (!string.IsNullOrEmpty(item.Imagen) && System.IO.File.Exists(System.IO.Path.Combine(env.WebRootPath, item.Imagen.TrimStart('/'))))
                        {
                            <img src="@item.Imagen" alt="Imagen del usuario"
                                 class="rounded-circle me-3"
                                 style="width: 80px; height: 80px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="rounded-circle bg-light d-flex align-items-center justify-content-center me-3"
                                 style="width: 80px; height: 80px;">
                                <i class="bi bi-person fs-4 text-muted"></i>
                            </div>
                        }
                        <div>
                            <h5 class="card-title mb-0">@item.Nombre</h5>
                            <small class="text-muted">@rol?.NombreRol</small>
                        </div>
                    </div>
                    <div class="card-text">
                        <p class="mb-1">
                            <i class="bi bi-envelope me-2"></i>@item.CorreoElectronico
                        </p>
                        <p class="mb-1">
                            <i class="bi bi-telephone me-2"></i>@item.Telefono
                        </p>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <div class="btn-group">
                            @Html.ActionLink("Detalles", "Details", new { id = item.IdUsuario }, new { @class = "btn btn-sm btn-outline-secondary" })
                            @Html.ActionLink("Editar", "Edit", new { id = item.IdUsuario }, new { @class = "btn btn-sm btn-outline-warning" })
                            <form asp-action="Delete" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.IdUsuario" />
                                <button type="submit" class="btn btn-sm btn-outline-danger">Eliminar</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var searchBox = document.getElementById("search-box");

            function filterCards() {
                var filter = searchBox.value.toLowerCase();
                var cards = document.querySelectorAll(".card-container");

                cards.forEach(function(card) {
                    var cardText = card.textContent.toLowerCase();
                    card.style.display = (cardText.indexOf(filter) !== -1) ? "block" : "none";
                });
            }

            searchBox.addEventListener("keyup", filterCards);
        });
    </script>
}